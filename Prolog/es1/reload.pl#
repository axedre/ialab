% Dominio dei cammini su mappa 10x10

num_col(10).
num_righe(10).

occupata(pos(2,5)).
occupata(pos(3,5)).
occupata(pos(4,5)).
occupata(pos(5,5)).
occupata(pos(6,5)).
occupata(pos(7,5)).
occupata(pos(7,1)).
occupata(pos(7,2)).
occupata(pos(7,3)).
occupata(pos(7,4)).
occupata(pos(5,7)).
occupata(pos(6,7)).
occupata(pos(7,7)).
occupata(pos(8,7)).
occupata(pos(4,7)).
occupata(pos(4,8)).
occupata(pos(4,9)).
occupata(pos(4,10)).

iniziale(pos(4,2)).

finale(pos(7,9)).


applicabile(est,pos(R,C)) :- 
	num_col(NC), C<NC,
	C1 is C+1,
	\+ occupata(pos(R,C1)).

applicabile(sud,pos(R,C)) :- 
	num_righe(NR), R<NR,
	R1 is R+1,
	\+ occupata(pos(R1,C)).

applicabile(ovest,pos(R,C)) :- 
	C>1,
	C1 is C-1,
	\+ occupata(pos(R,C1)).

applicabile(nord,pos(R,C)) :- 
	R>1,
	R1 is R-1,
	\+ occupata(pos(R1,C)).

trasforma(est,pos(R,C),pos(R,C1)) :- C1 is C+1.
trasforma(ovest,pos(R,C),pos(R,C1)) :- C1 is C-1.
trasforma(sud,pos(R,C),pos(R1,C)) :- R1 is R+1.
trasforma(nord,pos(R,C),pos(R1,C)) :- R1 is R-1.

% ================================================
% =================================================




ric_prof_cc_lim( [nodo(S,LISTA_AZ)|RESTO] , _, _, [] ) :- finale(S),!.
ric_prof_cc_lim( [nodo(S,LISTA_AZ)|RESTO], L, Visitati, [Az|Resto]) :-
	L>0,
	applicabile(Az,S),
	trasforma(Az,S,Nuovo_S),
	\+ member(Nuovo_S,Visitati),
	L1 is L-1,
	ric_prof_cc_lim(Nuovo_S,L1,[S|Visitati],Resto).
	
% ric_prof_cc_id([nodo(S,LISTA_AZ)|RESTO],L,Ris) :-
% ric_prof_cc_lim(I,L,[],Ris).
%ric_prof_cc_id([nodo(S,LISTA_AZ)|RESTO],L,Ris) :-
%	L1 is L+1,
%	ric_prof_cc_id(I,L1,Ris).

ric_ida( [nodo(S, LISTA_AZ) |RESTO], Ris ) :- 
	L1 is h(I)
	
	.

espandi(nodo(S,LISTA_AZ),LISTA_SUCC):-
%viene popolata la lista AZIONI tramite la findall
	findall(AZ,applicabile(AZ,S),AZIONI),
	successori(nodo(S,LISTA_AZ),AZIONI,LISTA_SUCC).
	
successori(_,[],[]).
successori(  nodo(S,LISTA_AZ),[AZ|RESTO], [nodo(NUOVO_S,NUOVA_LISTA_AZ)|ALTRI]  ):-
	trasforma(AZ,S,NUOVO_S),
	append(LISTA_AZ,[AZ],NUOVA_LISTA_AZ),
	successori(nodo(S,LISTA_AZ),RESTO,ALTRI).

ric_ida_start :- iniziale(I), ric_ida( [nodo(S,[])], Ris), write(Ris).